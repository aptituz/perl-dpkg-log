#!/usr/bin/perl

use strict;
use warnings;

use lib 'lib';
use Getopt::Long;
use File::Basename;
use Sys::Hostname;
use Template;
use DPKG::Log::Analyse;
use Params::Validate;
use Data::Dumper;

# Initialize defaults
my $hostname = hostname;
my @logfiles;
my $template_file = 'dpkg-report.tt2';
my @template_dirs = ('.', '/etc/dpkg-report/templates' );

GetOptions(
    "hostname=s" => \$hostname,
    "log-file=s" => \@logfiles,
    "template-file=s" => \$template_file,
    "template-path=s" => \@template_dirs,
);

if (not @logfiles) {
    @logfiles = ('/var/log/dpkg.log');
}

sub gather_data {
    my %params = validate( @_,
        {
            logfile => { default => $logfiles[0] },
            hostname => { default => $hostname }
        }
    );

    # Guess right hostname from file name if logfile matches *.dpkg.log
    if (basename($params{'logfile'}) =~ /(.*).dpkg.log/) {
        $params{'hostname'} = $1;
    }

    # Initialize analyser
    my $analyser = DPKG::Log::Analyse->new(filename => $params{'logfile'});
    $analyser->analyse;

    # Get data
    my @newly_installed_packages = $analyser->newly_installed_packages;
    my @upgraded_packages = $analyser->upgraded_packages;
    my @removed_packages = $analyser->removed_packages;
    my @halfinstalled_packages = $analyser->halfinstalled_packages;
    my @halfconfigured_packages = $analyser->halfconfigured_packages;

    my $data = {
        newly_installed_packages => \@newly_installed_packages,
        upgraded_packages => \@upgraded_packages,
        removed_packages => \@removed_packages,
        hostname => $params{'hostname'}
    };
    
    if (@halfconfigured_packages) {
        $data->{halfconfigured_packages} = \@halfconfigured_packages
    }

    if (@halfinstalled_packages) {
        $data->{halfinstalled_packages} = \@halfinstalled_packages
    }

    return $data;
}
sub generate_report {
    my %params = validate( @_,
        {
            template_file => { default => $template_file },
            template_dirs =>  { default => \@template_dirs },
            data => { default => {} }
        }
    );
    my $template = Template->new(
        {
            INCLUDE_PATH    => $params{'template_dirs'},
            INTERPOLATE     => 1,
            POST_CHOMP      => 1,
        }
    );

    $template->process($params{template_file}, $params{data}) or die $template->error;

}

foreach my $logfile (@logfiles) {
    if (-d $logfile) {
        map {  generate_report(template_file => $template_file, data => gather_data(logfile => $_)) } glob($logfile."/*");
    } else {
        generate_report(template_file => $template_file, data => gather_data(logfile => $logfile));
    }
}
